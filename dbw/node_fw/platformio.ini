; https://docs.platformio.org/page/projectconf.html

[platformio]
boards_dir  = ccmn_defs/pio-boards
build_dir   = ../../build/dbw/node_fw
core_dir    = ../../deps/platformio
libdeps_dir = ../../build/dbw/node_fw/libdeps

[env]
platform    = espressif32@6.3.0
framework   = espidf

custom_ember_dir = lib/ember
custom_opencan_yml = ../../can/can.yml
custom_opencan_cli = ../../deps/rust/current/bin/opencan-cli

extra_scripts =
    pre:${env.custom_ember_dir}/ember-pio-scripts/ember_identity.py     # defines EMBER_NODE_IDENTITY
    pre:${env.custom_ember_dir}/ember-pio-scripts/ember_ota_target.py   # Update over CAN
    pre:${env.custom_ember_dir}/ember-pio-scripts/ember_opencan.py      # Hook for OpenCAN code generation

# Common build flags
build_flags =
    -Wall
    -Wextra
    -Werror
    -D_EMBER

# Partition table
board_build.partitions = partitions_igvc.csv

# Libraries. We are currently not freezing at versions.
lib_deps =
    libeeprom
    ember-can
    cuber-base
    ccmn-pins

# Tell PlatformIO where to find libraries (libraries have a library.json)
lib_extra_dirs =
    ccmn_defs
    ${env.custom_ember_dir}
    mod

# --- Node Configurations --- *
[blink]
board_can_node = BLINK
lib_deps =
    ${env.lib_deps}
    cuber-blink

; [env:blink1.1]
; board = dbw_node_v1.1
; extends = blink

[env:blink1.2]
board = ccmn_v1.2
extends = blink

[env:blink2.0A]
board = ccmn_v2.0A
extends = blink

[env:blink2.0B]
board = ccmn_v2.0B
extends = blink


[env:throttle]
board = ccmn_v2.0B
board_can_node = THROTTLE
lib_deps =
    ${env.lib_deps}
    cuber-throttle


[env:brake]
board = ccmn_v2.0B
board_can_node = BRAKE
lib_deps =
    ${env.lib_deps}
    cuber-brake


; [env:encoder]
; board = dbw_node_v1.1
; board_can_node = ENCF
; lib_deps =
;     ${env.lib_deps}
;     cuber-encoder


[env:ctrl]
board = ccmn_v2.0B
board_can_node = CTRL
lib_deps =
    ${env.lib_deps}
    cuber-ctrl


; [env:pb_mon]
; board = dbw_node_v1.1
; board_can_node = PB
; lib_deps =
;     ${env.lib_deps}
;     cuber-pbmon


[env:steer]
board = ccmn_v2.0B
board_can_node = STEER
lib_deps =
    ${env.lib_deps}
    cuber-steer
    pid


[env:sup]
board = ccmn_v2.0B
board_can_node = SUP
lib_deps =
    ${env.lib_deps}
    cuber-sup
