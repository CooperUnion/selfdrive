; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
boards_dir = ccmn_defs/pio-boards
build_dir = ../../build/dbw/node_fw

[env]
platform = espressif32@6.1.0
framework = espidf

# Common build flags
build_flags =
    -Wall
    -Wextra
    -Werror
    -D_EMBER

# Partition table
board_build.partitions = partitions_igvc.csv

# Hook for OpenCAN code generation
extra_scripts = pre:opencan-pio.py

# Libraries. We are currently not freezing at versions.
lib_deps =
    libeeprom
    ember-can
    cuber-base
    ccmn-pins

# Tell PlatformIO where to find libraries (libraries have a library.json)
lib_extra_dirs =
    ccmn_defs
    lib/ember
    mod

# --- Node Configurations --- *
[blink]
board_can_node = TEST
lib_deps =
    ${env.lib_deps}
    cuber-blink

[env:blink1.1]
board = dbw_node_v1.1
extends = blink

[env:blink1.2]
board = ccmn_v1.2
extends = blink

[env:blink2.0A]
board = ccmn_v2.0A
extends = blink

[env:blink2.0B]
board = ccmn_v2.0B
extends = blink

[env:throttle]
board = dbw_node_v1.1
board_can_node = THROTTLE
lib_deps =
    ${env.lib_deps}
    cuber-throttle

[env:brake]
board = dbw_node_v1.1
board_can_node = BRAKE
lib_deps =
    ${env.lib_deps}
    cuber-brake

[env:encoder]
board = dbw_node_v1.1
board_can_node = ENCF
lib_deps =
    ${env.lib_deps}
    cuber-encoder

[env:ctrl]
board = dbw_node_v1.1
board_can_node = CTRL
lib_deps =
    ${env.lib_deps}
    cuber-ctrl

[env:pb_mon]
board = dbw_node_v1.1
board_can_node = PB
lib_deps =
    ${env.lib_deps}
    cuber-pbmon
