# https://docs.docker.com/compose/gpu-support/
version: '3'

services:
    master:
        build: docker/master/.
        container_name: master
        tty: true
        environment:
            - 'ROS_HOSTNAME=master'
            - 'ROS_MASTER_URI=http://master:11311'
            - 'DISPLAY=$DISPLAY'
            - 'QT_X11_NO_MITSHM=1'
        ports:
            - '11311:11311'
        volumes:
            - '/tmp/.X11-unix:/tmp/.X11-unix'
        restart: unless-stopped
        command: stdbuf -o L roscore

    redis:
        image: redis:7.0-alpine
        container_name: redis
        restart: unless-stopped
        ports:
            - '6379:6379'

    pure_pursuit:
        build: docker/pure_pursuit/.
        container_name: pure_pursuit
        tty: true
        environment:
            - 'ROS_HOSTNAME=pure_pursuit'
            - 'ROS_MASTER_URI=http://master:11311'
        volumes:
            - './docker/pure_pursuit:/app/ros_ws/src/pure_pursuit'
        depends_on:
            - master

    navigation:
        build: docker/navigation/.
        container_name: navigation
        tty: true
        environment:
            - 'ROS_HOSTNAME=navigation'
            - 'ROS_MASTER_URI=http://master:11311'
            - 'DISPLAY=$DISPLAY'
            - 'QT_X11_NO_MITSHM=1'
        volumes:
            - '/tmp/.X11-unix:/tmp/.X11-unix' 
            - './docker/navigation/scooter_launch:/app/ros_ws/src/scooter_launch'

    py-steering:
        build: docker/py-steering/.
        container_name: py-steering
        tty: true
        privileged: true
        volumes:
            - '../dbw/py-steering:/app/py-steering'
        depends_on:
            - redis

    velodyne:
        build: docker/3dlidar/.
        container_name: velodyne
        tty: true
        environment:
            - 'ROS_HOSTNAME=velodyne'
            - 'ROS_MASTER_URI=http://master:11311'
            - 'DISPLAY=$DISPLAY'
            - 'QT_X11_NO_MITSHM=1'
        volumes:
            - '/tmp/.X11-unix:/tmp/.X11-unix'
            - './docker/3dlidar/3dlidar_launch:/app/ros_ws/src/3dlidar_launch'
        depends_on:
            - master
        ports:
            - 2368:2368/udp
            - 8308:8308/udp

    zed:
        build: docker/zed/.
        #image: git-registry.cooperigvc.org/igvc/selfdrive/ros/zed:0.1
        container_name: zed
        tty: true
        privileged: true
        environment:
            - 'ROS_HOSTNAME=zed'
            - 'ROS_MASTER_URI=http://master:11311'
            - 'DISPLAY=$DISPLAY'
            - 'QT_X11_NO_MITSHM=1'
        volumes:
            - '/dev:/dev' # Come up with a better solution later. Maybe mount the file associated with the zed only
            - '/tmp/.X11-unix:/tmp/.X11-unix'
            - './docker/zed/zed_launch:/app/ros_ws/src/zed_launch'
        # depends_on:
        #     - master
        deploy:
            resources:
                reservations:
                    devices:
                        - capabilities: [gpu]
        restart: unless-stopped

    rviz:
        build: docker/rviz/.
        container_name: rviz
        tty: true
        environment:
            - 'ROS_HOSTNAME=rviz'
            - 'ROS_MASTER_URI=http://master:11311'
            - 'DISPLAY=$DISPLAY'
            - 'QT_X11_NO_MITSHM=1'
        volumes:
            - '/tmp/.X11-unix:/tmp/.X11-unix'
        #command: rviz
        depends_on:
            - master

    rtabmap:
        build: docker/rtabmap/.
        container_name: rtabmap
        tty: true
        privileged: true
        environment:
            - 'ROS_HOSTNAME=rtabmap'
            - 'ROS_MASTER_URI=http://master:11311'
            - 'DISPLAY=$DISPLAY'
            - 'QT_X11_NO_MITSHM=1'
        volumes:
            - '/tmp/.X11-unix:/tmp/.X11-unix'
            #- ~/.ros:/root
            - './docker/rtabmap/rtabmap_launch:/app/ros_ws/src/rtabmap_launch'
        depends_on:
            - master
        deploy:
            resources:
                reservations:
                    devices:
                        - capabilities: [gpu]

    gps:
        build: docker/gps/.
        container_name: gps
        tty: true
        privileged: true
        environment:
            - 'ROS_HOSTNAME=gps'
            - 'ROS_MASTER_URI=http://master:11311'
            - 'DISPLAY=$DISPLAY'
            - 'QT_X11_NO_MITSHM=1'
        volumes:
            - '/tmp/.X11-unix:/tmp/.X11-unix'
        depends_on:
            - master

    encoder_odom:
        build: docker/encoder_odom
        container_name: encoder_odom
        tty: true
        environment:
            - 'ROS_HOSTNAME=encoder_odom'
            - 'ROS_MASTER_URI=http://master:11311'
        volumes:
            - './docker/encoder_odom/src:/app/ros_ws/src/encoder_odom'
        depends_on:
            - master

    techbus:
        build: docker/techbus/
        container_name: techbus
        tty: true
        environment:
            - 'ROS_HOSTNAME=techbus'
            - 'ROS_MASTER_URI=http://master:11311'
        volumes:
            - './docker/techbus:/app/ros_ws/src/techbus'
        depends_on:
            - master

    map:
        build: docker/map_test/
        container_name: map
        tty: true
        environment:
            - 'ROS_HOSTNAME=map'
            - 'ROS_MASTER_URI=http://master:11311'
        volumes:
            - './docker/map_test:/app/ros_ws/src/'
        depends_on:
            - master
   
    vcost:
        build: docker/virtual_costmap_layer/
        container_name: vcost
        tty: true
        environment:
            - 'ROS_HOSTNAME=vcost'
            - 'ROS_MASTER_URI=http://master:11311'
            - 'DISPLAY=$DISPLAY'
            - 'QT_X11_NO_MITSHM=1'
        volumes:
            - '/tmp/.X11-unix:/tmp/.X11-unix' 
            # - '/dev/dri:/dev/dri' 
            - './docker/virtual_costmap_layer:/app/ros_ws/src/'
        depends_on:
            - master
        deploy:
            resources:
                reservations:
                    devices:
                        - capabilities: [gpu]