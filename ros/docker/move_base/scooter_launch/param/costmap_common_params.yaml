# max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
#robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
footprint: [[0, -0.25], [0, 0.25], [1.2, -0.25], [1.2, 0.25]]  # if the robot is not circular

map_type: voxel

# obstacle_layer:
#   enabled:              true
#   max_obstacle_height:  0.6
#   origin_z:             0.0
#   z_resolution:         0.1
#   z_voxels:             3
#   unknown_threshold:    3
#   mark_threshold:       0
#   combination_method:   1
#   track_unknown_space:  true   
#   obstacle_range: 2.5
#   raytrace_range: 3.0
#   z_resolution: 0.2
#   z_voxels: 2
#   publish_voxel_map: true
#   observation_sources: bump
#   # scan:
#   #   data_type: LaserScan
#   #   topic: /scan_filtered
#   #   marking: true
#   #   clearing: true
#   #   min_obstacle_height: 0.25
#   #   max_obstacle_height: 0.35
#   bump:
#     data_type: PointCloud2
#     topic: /rtabmap/cloud_map
#     marking: true
#     clearing: false
#     min_obstacle_height: 0.0
#     max_obstacle_height: 0.15
#   # for debugging only, let's you see the entire voxel grid

# #cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
# inflation_layer:
#   enabled:              true
#   cost_scaling_factor:  3.0  # exponential rate at which the obstacle cost drops off (default: 10)
#   inflation_radius:     1.0  # max. distance from an obstacle at which costs are incurred for planning paths.