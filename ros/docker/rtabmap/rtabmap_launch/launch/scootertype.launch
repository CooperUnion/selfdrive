<?xml version="1.0"?>
<launch>
    <!-- ZED Param -->
    <arg name="zed_namespace"		    	default="zed" />
    <arg name="svo_file"                        default="" /> <!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->
    <arg name="zed_node_name"                   default="zed_node" />
    <arg name="camera_model"                    default="zed" /> <!-- 'zed' or 'zedm' -->

    <!-- RTAB-map Param-->
    <arg name="subscribe_scan"          default="false" />
    <arg name="rgb_topic"               	value="/$(arg zed_namespace)/$(arg zed_node_name)/rgb/image_rect_color" />
    <arg name="depth_topic"             	value="/$(arg zed_namespace)/$(arg zed_node_name)/depth/depth_registered" />
    <arg name="camera_info_topic"       	value="/$(arg zed_namespace)/$(arg zed_node_name)/rgb/camera_info" />
    <arg name="depth_camera_info_topic" 	value="/$(arg zed_namespace)/$(arg zed_node_name)/depth/camera_info" />
    <arg name="frame_id"                      value="base_link" />
    <arg name="approx_sync"                   value="true" />
    <arg name="visual_odometry"               value="false" />
    <arg name="odom_topic"                    value="/$(arg zed_namespace)/$(arg zed_node_name)/odom" />
    <arg name="rviz"                          value="true" />
    <arg name="rtabmapviz"                    value="false" />
    <arg name="output"                  default="screen"/>        <!-- Control node output (screen or log) -->
    
    <arg name="database_path"           default="rtabmap.db"/>
    <arg name="wait_for_transform"      default="0.2"/> 

    <!-- localization mode params -->
    <arg name="localization"                  default="false" />
    <arg     if="$(arg localization)" name="rtabmap_args" value=""/>
    <arg unless="$(arg localization)" name="rtabmap_args" value="--delete_db_on_start"/>

<!-- ~~~~~~~~~~~~~ Nodes ~~~~~~~~~~~~~~~~~ -->
    <!-- ROS URDF description of the Scooter -->
    <group>
        <param name="scooter_description" textfile="$(find rtabmap_launch)/urdf/scooter.urdf" />
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <remap from="robot_description" to="scooter_description" />
        </node>
    </group>

    <!-- RTAL-map Node -->
    <group ns="rtabmap">
        <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)">
            <param name="database_path"       type="string" value="$(arg database_path)"/>
            <param name="frame_id"            type="string" value="base_link"/>
            <param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform)"/>
            <param name="subscribe_depth"     type="bool"   value="true"/>
            <param     if="$(arg subscribe_scan)" name="subscribe_scan"      type="bool"   value="true"/>
            <param unless="$(arg subscribe_scan)" name="subscribe_scan"      type="bool"   value="false"/>
            <param name="map_negative_poses_ignored" type="bool" value="true"/>

            <!-- When sending goals on /rtabmap/goal topic, use actionlib to communicate with move_base --> 
            <param name="use_action_for_goal" type="bool" value="true"/>
            <remap from="move_base"            to="/move_base"/>
            
            <!-- inputs -->
            <remap from="scan"            to="/scan_filtered"/>
            <remap from="rgb/image"       to="$(arg rgb_topic)"/>
            <remap from="depth/image"     to="$(arg depth_topic)"/>
            <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
            <remap from="odom"            to="$(arg odom_topic)"/>

            <!-- Fix odom covariance as in simulation the covariance in /odom topic is high (0.1 for linear and 0.05 for angular) -->
            <param name="odom_frame_id" value="odom"/>
            <param name="odom_tf_linear_variance" value="0.01"/>
            <param name="odom_tf_angular_variance" value="0.01"/>

            <!-- scan relevant -->
            <param     if="$(arg subscribe_scan)" name="gen_scan" value="false"/> 
            <param unless="$(arg subscribe_scan)" name="gen_scan" value="true"/>

            <!-- feature type -->
            <!-- <param name="Vis/FeatureType"              type="string" value="10"/> -->
            <!-- <param name="Kp/DetectorStrategy"          type="string" value="10"/> -->

            <!-- <param name="Rtabmap/DetectionRate"        type="string" value="1"/> -->

            <param unless="$(arg subscribe_scan)" name="Grid/FromDepth" value="false"/>
            
            <!-- localization mode -->
            <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
            <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
            <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>


        </node>
        
        <!-- visualization with rtabmapviz -->
        <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
            <param name="subscribe_depth"             type="bool" value="true"/>
            <param name="subscribe_scan"              type="bool" value="false"/>
            <param name="frame_id"                    type="string" value="base_footprint"/>
            <param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
            
            <remap from="rgb/image"       to="$(arg rgb_topic)"/>
            <remap from="depth/image"     to="$(arg depth_topic)"/>
            <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
            <remap from="scan"            to="/scan"/>
        </node>

        <node name="rviz" pkg="rviz" type="rviz" args="-d /app/ros_ws/src/rtabmap_launch/rviz/zed-rtabmap.rviz" output="screen" />  
    </group>

    <node pkg="cmd_to_ctrl" type="cmd_to_ctrl" name="cmd_to_ctrl" output="screen">
        <param name="length" value="1.2" type="double"/>
    </node>

    <!-- <node pkg="rosserial_arduino" type="serial_node.py" name="arduino1" output="screen">
        <param name="port" value="/dev/ttyACM0"/>
    </node> -->
</launch>
